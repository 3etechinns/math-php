<?php
namespace Math\Probability;

/**
 * Standard normal tables for Z and related methods
 *
 * A standard normal table, also called the unit normal table or Z table,
 * is a mathematical table for the values of Î¦, which are the values of the
 * cumulative distribution function of the normal distribution.
 *
 * It is used to find the probability that a statistic is observed below,
 * above, or between values on the standard normal distribution, and by extension,
 * any normal distribution.
 *
 * Since probability tables cannot be printed for every normal distribution,
 * as there are an infinite variety of normal distributions,
 * it is common practice to convert a normal to a standard normal
 * and then use the standard normal table to find probabilities.
 *
 * https://en.wikipedia.org/wiki/Standard_normal_table
 */
class StandardNormalTable {

  /**
   * Probability that a statistic is between 0 (mean) and Z
   * @var array
   */
  const CUMULATIVE_FROM_MEAN = [
    '0.0' => [ 0 => 0.00000, 1 => 0.00399, 2 => 0.00798, 3 => 0.01197, 4 => 0.01595, 5 => 0.01994, 6 => 0.02392, 7 => 0.02790, 8 => 0.03188, 9 => 0.03586 ],
    '0.1' => [ 0 => 0.03980, 1 => 0.04380, 2 => 0.04776, 3 => 0.05172, 4 => 0.05567, 5 => 0.05966, 6 => 0.06360, 7 => 0.06749, 8 => 0.07142, 9 => 0.07535 ],
    '0.2' => [ 0 => 0.07930, 1 => 0.08317, 2 => 0.08706, 3 => 0.09095, 4 => 0.09483, 5 => 0.09871, 6 => 0.10257, 7 => 0.10642, 8 => 0.11026, 9 => 0.11409 ],
    '0.3' => [ 0 => 0.11791, 1 => 0.12172, 2 => 0.12552, 3 => 0.12930, 4 => 0.13307, 5 => 0.13683, 6 => 0.14058, 7 => 0.14431, 8 => 0.14803, 9 => 0.15173 ],
    '0.4' => [ 0 => 0.15542, 1 => 0.15910, 2 => 0.16276, 3 => 0.16640, 4 => 0.17003, 5 => 0.17364, 6 => 0.17724, 7 => 0.18082, 8 => 0.18439, 9 => 0.18793 ],
    '0.5' => [ 0 => 0.19146, 1 => 0.19497, 2 => 0.19847, 3 => 0.20194, 4 => 0.20540, 5 => 0.20884, 6 => 0.21226, 7 => 0.21566, 8 => 0.21904, 9 => 0.22240 ],
    '0.6' => [ 0 => 0.22575, 1 => 0.22907, 2 => 0.23237, 3 => 0.23565, 4 => 0.23891, 5 => 0.24215, 6 => 0.24537, 7 => 0.24857, 8 => 0.25175, 9 => 0.25490 ],
    '0.7' => [ 0 => 0.25804, 1 => 0.26115, 2 => 0.26424, 3 => 0.26730, 4 => 0.27035, 5 => 0.27337, 6 => 0.27637, 7 => 0.27935, 8 => 0.28230, 9 => 0.28524 ],
    '0.8' => [ 0 => 0.28814, 1 => 0.29103, 2 => 0.29389, 3 => 0.29673, 4 => 0.29955, 5 => 0.30234, 6 => 0.30511, 7 => 0.30785, 8 => 0.31057, 9 => 0.31327 ],
    '0.9' => [ 0 => 0.31594, 1 => 0.31859, 2 => 0.32121, 3 => 0.32381, 4 => 0.32639, 5 => 0.32894, 6 => 0.33147, 7 => 0.33398, 8 => 0.33646, 9 => 0.33891 ],
    '1.0' => [ 0 => 0.34134, 1 => 0.34375, 2 => 0.34614, 3 => 0.34849, 4 => 0.35083, 5 => 0.35314, 6 => 0.35543, 7 => 0.35769, 8 => 0.35993, 9 => 0.36214 ],
    '1.1' => [ 0 => 0.36433, 1 => 0.36650, 2 => 0.36864, 3 => 0.37076, 4 => 0.37286, 5 => 0.37493, 6 => 0.37698, 7 => 0.37900, 8 => 0.38100, 9 => 0.38298 ],
    '1.2' => [ 0 => 0.38493, 1 => 0.38686, 2 => 0.38877, 3 => 0.39065, 4 => 0.39251, 5 => 0.39435, 6 => 0.39617, 7 => 0.39796, 8 => 0.39973, 9 => 0.40147 ],
    '1.3' => [ 0 => 0.40320, 1 => 0.40490, 2 => 0.40658, 3 => 0.40824, 4 => 0.40988, 5 => 0.41149, 6 => 0.41308, 7 => 0.41466, 8 => 0.41621, 9 => 0.41774 ],
    '1.4' => [ 0 => 0.41924, 1 => 0.42073, 2 => 0.42220, 3 => 0.42364, 4 => 0.42507, 5 => 0.42647, 6 => 0.42785, 7 => 0.42922, 8 => 0.43056, 9 => 0.43189 ],
    '1.5' => [ 0 => 0.43319, 1 => 0.43448, 2 => 0.43574, 3 => 0.43699, 4 => 0.43822, 5 => 0.43943, 6 => 0.44062, 7 => 0.44179, 8 => 0.44295, 9 => 0.44408 ],
    '1.6' => [ 0 => 0.44520, 1 => 0.44630, 2 => 0.44738, 3 => 0.44845, 4 => 0.44950, 5 => 0.45053, 6 => 0.45154, 7 => 0.45254, 8 => 0.45352, 9 => 0.45449 ],
    '1.7' => [ 0 => 0.45543, 1 => 0.45637, 2 => 0.45728, 3 => 0.45818, 4 => 0.45907, 5 => 0.45994, 6 => 0.46080, 7 => 0.46164, 8 => 0.46246, 9 => 0.46327 ],
    '1.8' => [ 0 => 0.46407, 1 => 0.46485, 2 => 0.46562, 3 => 0.46638, 4 => 0.46712, 5 => 0.46784, 6 => 0.46856, 7 => 0.46926, 8 => 0.46995, 9 => 0.47062 ],
    '1.9' => [ 0 => 0.47128, 1 => 0.47193, 2 => 0.47257, 3 => 0.47320, 4 => 0.47381, 5 => 0.47441, 6 => 0.47500, 7 => 0.47558, 8 => 0.47615, 9 => 0.47670 ],
    '2.0' => [ 0 => 0.47725, 1 => 0.47778, 2 => 0.47831, 3 => 0.47882, 4 => 0.47932, 5 => 0.47982, 6 => 0.48030, 7 => 0.48077, 8 => 0.48124, 9 => 0.48169 ],
    '2.1' => [ 0 => 0.48214, 1 => 0.48257, 2 => 0.48300, 3 => 0.48341, 4 => 0.48382, 5 => 0.48422, 6 => 0.48461, 7 => 0.48500, 8 => 0.48537, 9 => 0.48574 ],
    '2.2' => [ 0 => 0.48610, 1 => 0.48645, 2 => 0.48679, 3 => 0.48713, 4 => 0.48745, 5 => 0.48778, 6 => 0.48809, 7 => 0.48840, 8 => 0.48870, 9 => 0.48899 ],
    '2.3' => [ 0 => 0.48928, 1 => 0.48956, 2 => 0.48983, 3 => 0.49010, 4 => 0.49036, 5 => 0.49061, 6 => 0.49086, 7 => 0.49111, 8 => 0.49134, 9 => 0.49158 ],
    '2.4' => [ 0 => 0.49180, 1 => 0.49202, 2 => 0.49224, 3 => 0.49245, 4 => 0.49266, 5 => 0.49286, 6 => 0.49305, 7 => 0.49324, 8 => 0.49343, 9 => 0.49361 ],
    '2.5' => [ 0 => 0.49379, 1 => 0.49396, 2 => 0.49413, 3 => 0.49430, 4 => 0.49446, 5 => 0.49461, 6 => 0.49477, 7 => 0.49492, 8 => 0.49506, 9 => 0.49520 ],
    '2.6' => [ 0 => 0.49534, 1 => 0.49547, 2 => 0.49560, 3 => 0.49573, 4 => 0.49585, 5 => 0.49598, 6 => 0.49609, 7 => 0.49621, 8 => 0.49632, 9 => 0.49643 ],
    '2.7' => [ 0 => 0.49653, 1 => 0.49664, 2 => 0.49674, 3 => 0.49683, 4 => 0.49693, 5 => 0.49702, 6 => 0.49711, 7 => 0.49720, 8 => 0.49728, 9 => 0.49736 ],
    '2.8' => [ 0 => 0.49744, 1 => 0.49752, 2 => 0.49760, 3 => 0.49767, 4 => 0.49774, 5 => 0.49781, 6 => 0.49788, 7 => 0.49795, 8 => 0.49801, 9 => 0.49807 ],
    '2.9' => [ 0 => 0.49813, 1 => 0.49819, 2 => 0.49825, 3 => 0.49831, 4 => 0.49836, 5 => 0.49841, 6 => 0.49846, 7 => 0.49851, 8 => 0.49856, 9 => 0.49861 ],
    '3.0' => [ 0 => 0.49865, 1 => 0.49869, 2 => 0.49874, 3 => 0.49878, 4 => 0.49882, 5 => 0.49886, 6 => 0.49889, 7 => 0.49893, 8 => 0.49896, 9 => 0.49900 ],
  ];

  /**
   * Probability that a statistic is less than Z
   * @var array
   */
  const CUMULATIVE = [
    '0.0' => [ 0 => 0.50000, 1 => 0.50399, 2 => 0.50798, 3 => 0.51197, 4 => 0.51595, 5 => 0.51994, 6 => 0.52392, 7 => 0.52790, 8 => 0.53188, 9 => 0.53586 ],
    '0.1' => [ 0 => 0.53980, 1 => 0.54380, 2 => 0.54776, 3 => 0.55172, 4 => 0.55567, 5 => 0.55966, 6 => 0.56360, 7 => 0.56749, 8 => 0.57142, 9 => 0.57535 ],
    '0.2' => [ 0 => 0.57930, 1 => 0.58317, 2 => 0.58706, 3 => 0.59095, 4 => 0.59483, 5 => 0.59871, 6 => 0.60257, 7 => 0.60642, 8 => 0.61026, 9 => 0.61409 ],
    '0.3' => [ 0 => 0.61791, 1 => 0.62172, 2 => 0.62552, 3 => 0.62930, 4 => 0.63307, 5 => 0.63683, 6 => 0.64058, 7 => 0.64431, 8 => 0.64803, 9 => 0.65173 ],
    '0.4' => [ 0 => 0.65542, 1 => 0.65910, 2 => 0.66276, 3 => 0.66640, 4 => 0.67003, 5 => 0.67364, 6 => 0.67724, 7 => 0.68082, 8 => 0.68439, 9 => 0.68793 ],
    '0.5' => [ 0 => 0.69146, 1 => 0.69497, 2 => 0.69847, 3 => 0.70194, 4 => 0.70540, 5 => 0.70884, 6 => 0.71226, 7 => 0.71566, 8 => 0.71904, 9 => 0.72240 ],
    '0.6' => [ 0 => 0.72575, 1 => 0.72907, 2 => 0.73237, 3 => 0.73565, 4 => 0.73891, 5 => 0.74215, 6 => 0.74537, 7 => 0.74857, 8 => 0.75175, 9 => 0.75490 ],
    '0.7' => [ 0 => 0.75804, 1 => 0.76115, 2 => 0.76424, 3 => 0.76730, 4 => 0.77035, 5 => 0.77337, 6 => 0.77637, 7 => 0.77935, 8 => 0.78230, 9 => 0.78524 ],
    '0.8' => [ 0 => 0.78814, 1 => 0.79103, 2 => 0.79389, 3 => 0.79673, 4 => 0.79955, 5 => 0.80234, 6 => 0.80511, 7 => 0.80785, 8 => 0.81057, 9 => 0.81327 ],
    '0.9' => [ 0 => 0.81594, 1 => 0.81859, 2 => 0.82121, 3 => 0.82381, 4 => 0.82639, 5 => 0.82894, 6 => 0.83147, 7 => 0.83398, 8 => 0.83646, 9 => 0.83891 ],
    '1.0' => [ 0 => 0.84134, 1 => 0.84375, 2 => 0.84614, 3 => 0.84849, 4 => 0.85083, 5 => 0.85314, 6 => 0.85543, 7 => 0.85769, 8 => 0.85993, 9 => 0.86214 ],
    '1.1' => [ 0 => 0.86433, 1 => 0.86650, 2 => 0.86864, 3 => 0.87076, 4 => 0.87286, 5 => 0.87493, 6 => 0.87698, 7 => 0.87900, 8 => 0.88100, 9 => 0.88298 ],
    '1.2' => [ 0 => 0.88493, 1 => 0.88686, 2 => 0.88877, 3 => 0.89065, 4 => 0.89251, 5 => 0.89435, 6 => 0.89617, 7 => 0.89796, 8 => 0.89973, 9 => 0.90147 ],
    '1.3' => [ 0 => 0.90320, 1 => 0.90490, 2 => 0.90658, 3 => 0.90824, 4 => 0.90988, 5 => 0.91149, 6 => 0.91308, 7 => 0.91466, 8 => 0.91621, 9 => 0.91774 ],
    '1.4' => [ 0 => 0.91924, 1 => 0.92073, 2 => 0.92220, 3 => 0.92364, 4 => 0.92507, 5 => 0.92647, 6 => 0.92785, 7 => 0.92922, 8 => 0.93056, 9 => 0.93189 ],
    '1.5' => [ 0 => 0.93319, 1 => 0.93448, 2 => 0.93574, 3 => 0.93699, 4 => 0.93822, 5 => 0.93943, 6 => 0.94062, 7 => 0.94179, 8 => 0.94295, 9 => 0.94408 ],
    '1.6' => [ 0 => 0.94520, 1 => 0.94630, 2 => 0.94738, 3 => 0.94845, 4 => 0.94950, 5 => 0.95053, 6 => 0.95154, 7 => 0.95254, 8 => 0.95352, 9 => 0.95449 ],
    '1.7' => [ 0 => 0.95543, 1 => 0.95637, 2 => 0.95728, 3 => 0.95818, 4 => 0.95907, 5 => 0.95994, 6 => 0.96080, 7 => 0.96164, 8 => 0.96246, 9 => 0.96327 ],
    '1.8' => [ 0 => 0.96407, 1 => 0.96485, 2 => 0.96562, 3 => 0.96638, 4 => 0.96712, 5 => 0.96784, 6 => 0.96856, 7 => 0.96926, 8 => 0.96995, 9 => 0.97062 ],
    '1.9' => [ 0 => 0.97128, 1 => 0.97193, 2 => 0.97257, 3 => 0.97320, 4 => 0.97381, 5 => 0.97441, 6 => 0.97500, 7 => 0.97558, 8 => 0.97615, 9 => 0.97670 ],
    '2.0' => [ 0 => 0.97725, 1 => 0.97778, 2 => 0.97831, 3 => 0.97882, 4 => 0.97932, 5 => 0.97982, 6 => 0.98030, 7 => 0.98077, 8 => 0.98124, 9 => 0.98169 ],
    '2.1' => [ 0 => 0.98214, 1 => 0.98257, 2 => 0.98300, 3 => 0.98341, 4 => 0.98382, 5 => 0.98422, 6 => 0.98461, 7 => 0.98500, 8 => 0.98537, 9 => 0.98574 ],
    '2.2' => [ 0 => 0.98610, 1 => 0.98645, 2 => 0.98679, 3 => 0.98713, 4 => 0.98745, 5 => 0.98778, 6 => 0.98809, 7 => 0.98840, 8 => 0.98870, 9 => 0.98899 ],
    '2.3' => [ 0 => 0.98928, 1 => 0.98956, 2 => 0.98983, 3 => 0.99010, 4 => 0.99036, 5 => 0.99061, 6 => 0.99086, 7 => 0.99111, 8 => 0.99134, 9 => 0.99158 ],
    '2.4' => [ 0 => 0.99180, 1 => 0.99202, 2 => 0.99224, 3 => 0.99245, 4 => 0.99266, 5 => 0.99286, 6 => 0.99305, 7 => 0.99324, 8 => 0.99343, 9 => 0.99361 ],
    '2.5' => [ 0 => 0.99379, 1 => 0.99396, 2 => 0.99413, 3 => 0.99430, 4 => 0.99446, 5 => 0.99461, 6 => 0.99477, 7 => 0.99492, 8 => 0.99506, 9 => 0.99520 ],
    '2.6' => [ 0 => 0.99534, 1 => 0.99547, 2 => 0.99560, 3 => 0.99573, 4 => 0.99585, 5 => 0.99598, 6 => 0.99609, 7 => 0.99621, 8 => 0.99632, 9 => 0.99643 ],
    '2.7' => [ 0 => 0.99653, 1 => 0.99664, 2 => 0.99674, 3 => 0.99683, 4 => 0.99693, 5 => 0.99702, 6 => 0.99711, 7 => 0.99720, 8 => 0.99728, 9 => 0.99736 ],
    '2.8' => [ 0 => 0.99744, 1 => 0.99752, 2 => 0.99760, 3 => 0.99767, 4 => 0.99774, 5 => 0.99781, 6 => 0.99788, 7 => 0.99795, 8 => 0.99801, 9 => 0.99807 ],
    '2.9' => [ 0 => 0.99813, 1 => 0.99819, 2 => 0.99825, 3 => 0.99831, 4 => 0.99836, 5 => 0.99841, 6 => 0.99846, 7 => 0.99851, 8 => 0.99856, 9 => 0.99861 ],
    '3.0' => [ 0 => 0.99865, 1 => 0.99869, 2 => 0.99874, 3 => 0.99878, 4 => 0.99882, 5 => 0.99886, 6 => 0.99889, 7 => 0.99893, 8 => 0.99896, 9 => 0.99900 ],
  ];

  /**
   * Probability that a statistic is greater than Z
   * @var array
   */
  const COMPLEMENTARY_CUMULATIVE = [
    '0.0'=> [ 0 => 0.50000, 1 => 0.49601, 2 => 0.49202, 3 => 0.48803, 4 => 0.48405, 5 => 0.48006, 6 => 0.47608, 7 => 0.47210, 8 => 0.46812, 9 => 0.46414 ],
    '0.1'=> [ 0 => 0.46020, 1 => 0.45620, 2 => 0.45224, 3 => 0.44828, 4 => 0.44433, 5 => 0.44034, 6 => 0.43640, 7 => 0.43251, 8 => 0.42858, 9 => 0.42465 ],
    '0.2'=> [ 0 => 0.42070, 1 => 0.41683, 2 => 0.41294, 3 => 0.40905, 4 => 0.40517, 5 => 0.40129, 6 => 0.39743, 7 => 0.39358, 8 => 0.38974, 9 => 0.38591 ],
    '0.3'=> [ 0 => 0.38209, 1 => 0.37828, 2 => 0.37448, 3 => 0.37070, 4 => 0.36693, 5 => 0.36317, 6 => 0.35942, 7 => 0.35569, 8 => 0.35197, 9 => 0.34827 ],
    '0.4'=> [ 0 => 0.34458, 1 => 0.34090, 2 => 0.33724, 3 => 0.33360, 4 => 0.32997, 5 => 0.32636, 6 => 0.32276, 7 => 0.31918, 8 => 0.31561, 9 => 0.31207 ],
    '0.5'=> [ 0 => 0.30854, 1 => 0.30503, 2 => 0.30153, 3 => 0.29806, 4 => 0.29460, 5 => 0.29116, 6 => 0.28774, 7 => 0.28434, 8 => 0.28096, 9 => 0.27760 ],
    '0.6'=> [ 0 => 0.27425, 1 => 0.27093, 2 => 0.26763, 3 => 0.26435, 4 => 0.26109, 5 => 0.25785, 6 => 0.25463, 7 => 0.25143, 8 => 0.24825, 9 => 0.24510 ],
    '0.7'=> [ 0 => 0.24196, 1 => 0.23885, 2 => 0.23576, 3 => 0.23270, 4 => 0.22965, 5 => 0.22663, 6 => 0.22363, 7 => 0.22065, 8 => 0.21770, 9 => 0.21476 ],
    '0.8'=> [ 0 => 0.21186, 1 => 0.20897, 2 => 0.20611, 3 => 0.20327, 4 => 0.20045, 5 => 0.19766, 6 => 0.19489, 7 => 0.19215, 8 => 0.18943, 9 => 0.18673 ],
    '0.9'=> [ 0 => 0.18406, 1 => 0.18141, 2 => 0.17879, 3 => 0.17619, 4 => 0.17361, 5 => 0.17106, 6 => 0.16853, 7 => 0.16602, 8 => 0.16354, 9 => 0.16109 ],
    '1.0'=> [ 0 => 0.15866, 1 => 0.15625, 2 => 0.15386, 3 => 0.15151, 4 => 0.14917, 5 => 0.14686, 6 => 0.14457, 7 => 0.14231, 8 => 0.14007, 9 => 0.13786 ],
    '1.1'=> [ 0 => 0.13567, 1 => 0.13350, 2 => 0.13136, 3 => 0.12924, 4 => 0.12714, 5 => 0.12507, 6 => 0.12302, 7 => 0.12100, 8 => 0.11900, 9 => 0.11702 ],
    '1.2'=> [ 0 => 0.11507, 1 => 0.11314, 2 => 0.11123, 3 => 0.10935, 4 => 0.10749, 5 => 0.10565, 6 => 0.10383, 7 => 0.10204, 8 => 0.10027, 9 => 0.09853 ],
    '1.3'=> [ 0 => 0.09680, 1 => 0.09510, 2 => 0.09342, 3 => 0.09176, 4 => 0.09012, 5 => 0.08851, 6 => 0.08692, 7 => 0.08534, 8 => 0.08379, 9 => 0.08226 ],
    '1.4'=> [ 0 => 0.08076, 1 => 0.07927, 2 => 0.07780, 3 => 0.07636, 4 => 0.07493, 5 => 0.07353, 6 => 0.07215, 7 => 0.07078, 8 => 0.06944, 9 => 0.06811 ],
    '1.5'=> [ 0 => 0.06681, 1 => 0.06552, 2 => 0.06426, 3 => 0.06301, 4 => 0.06178, 5 => 0.06057, 6 => 0.05938, 7 => 0.05821, 8 => 0.05705, 9 => 0.05592 ],
    '1.6'=> [ 0 => 0.05480, 1 => 0.05370, 2 => 0.05262, 3 => 0.05155, 4 => 0.05050, 5 => 0.04947, 6 => 0.04846, 7 => 0.04746, 8 => 0.04648, 9 => 0.04551 ],
    '1.7'=> [ 0 => 0.04457, 1 => 0.04363, 2 => 0.04272, 3 => 0.04182, 4 => 0.04093, 5 => 0.04006, 6 => 0.03920, 7 => 0.03836, 8 => 0.03754, 9 => 0.03673 ],
    '1.8'=> [ 0 => 0.03593, 1 => 0.03515, 2 => 0.03438, 3 => 0.03362, 4 => 0.03288, 5 => 0.03216, 6 => 0.03144, 7 => 0.03074, 8 => 0.03005, 9 => 0.02938 ],
    '1.9'=> [ 0 => 0.02872, 1 => 0.02807, 2 => 0.02743, 3 => 0.02680, 4 => 0.02619, 5 => 0.02559, 6 => 0.02500, 7 => 0.02442, 8 => 0.02385, 9 => 0.02330 ],
    '2.0'=> [ 0 => 0.02275, 1 => 0.02222, 2 => 0.02169, 3 => 0.02118, 4 => 0.02068, 5 => 0.02018, 6 => 0.01970, 7 => 0.01923, 8 => 0.01876, 9 => 0.01831 ],
    '2.1'=> [ 0 => 0.01786, 1 => 0.01743, 2 => 0.01700, 3 => 0.01659, 4 => 0.01618, 5 => 0.01578, 6 => 0.01539, 7 => 0.01500, 8 => 0.01463, 9 => 0.01426 ],
    '2.2'=> [ 0 => 0.01390, 1 => 0.01355, 2 => 0.01321, 3 => 0.01287, 4 => 0.01255, 5 => 0.01222, 6 => 0.01191, 7 => 0.01160, 8 => 0.01130, 9 => 0.01101 ],
    '2.3'=> [ 0 => 0.01072, 1 => 0.01044, 2 => 0.01017, 3 => 0.00990, 4 => 0.00964, 5 => 0.00939, 6 => 0.00914, 7 => 0.00889, 8 => 0.00866, 9 => 0.00842 ],
    '2.4'=> [ 0 => 0.00820, 1 => 0.00798, 2 => 0.00776, 3 => 0.00755, 4 => 0.00734, 5 => 0.00714, 6 => 0.00695, 7 => 0.00676, 8 => 0.00657, 9 => 0.00639 ],
    '2.5'=> [ 0 => 0.00621, 1 => 0.00604, 2 => 0.00587, 3 => 0.00570, 4 => 0.00554, 5 => 0.00539, 6 => 0.00523, 7 => 0.00508, 8 => 0.00494, 9 => 0.00480 ],
    '2.6'=> [ 0 => 0.00466, 1 => 0.00453, 2 => 0.00440, 3 => 0.00427, 4 => 0.00415, 5 => 0.00402, 6 => 0.00391, 7 => 0.00379, 8 => 0.00368, 9 => 0.00357 ],
    '2.7'=> [ 0 => 0.00347, 1 => 0.00336, 2 => 0.00326, 3 => 0.00317, 4 => 0.00307, 5 => 0.00298, 6 => 0.00289, 7 => 0.00280, 8 => 0.00272, 9 => 0.00264 ],
    '2.8'=> [ 0 => 0.00256, 1 => 0.00248, 2 => 0.00240, 3 => 0.00233, 4 => 0.00226, 5 => 0.00219, 6 => 0.00212, 7 => 0.00205, 8 => 0.00199, 9 => 0.00193 ],
    '2.9'=> [ 0 => 0.00187, 1 => 0.00181, 2 => 0.00175, 3 => 0.00169, 4 => 0.00164, 5 => 0.00159, 6 => 0.00154, 7 => 0.00149, 8 => 0.00144, 9 => 0.00139 ],
    '3.0'=> [ 0 => 0.00135, 1 => 0.00131, 2 => 0.00126, 3 => 0.00122, 4 => 0.00118, 5 => 0.00114, 6 => 0.00111, 7 => 0.00107, 8 => 0.00104, 9 => 0.00100 ],
  ];

  /**
   * Get cumulative from mean for a Z
   * Probability that a statistic is between 0 (mean) and Z.
   *
   * @param float $Z
   * @return float probability
   */
  static function getCumulativeFromMean( float $Z ): float {
    if ( !preg_match( '/^ (\d [.] \d) (\d) $/x', sprintf( '%1.2f', $Z ), $matches) ) {
      throw new \Exception("Z does not match format X.XX: $Z");
    }
    list( $z, $ï¼0ï¼0x ) = [ $matches[1], $matches[2] ];
    return self::CUMULATIVE_FROM_MEAN[$z][$ï¼0ï¼0x];
  }

  /**
   * Get cumulative from mean for a Z
   * Probability that a statistic is less than Z.
   *
   * @param float $Z
   * @return float probability
   */
  static function getCumulative( float $Z ): float {
    if ( !preg_match( '/^ (\d [.] \d) (\d) $/x', sprintf( '%1.2f', $Z ), $matches) ) {
      throw new \Exception("Z does not match format X.XX: $Z");
    }
    list( $z, $ï¼0ï¼0x ) = [ $matches[1], $matches[2] ];
    return self::CUMULATIVE[$z][$ï¼0ï¼0x];
  }

  /**
   * Get cumulative from mean for a Z
   * Probability that a statistic is greater than Z.
   *
   * @param float $Z
   * @return float probability
   */
  static function getComplementaryCumulative( float $Z ): float {
    if ( !preg_match( '/^ (\d [.] \d) (\d) $/x', sprintf( '%1.2f', $Z ), $matches) ) {
      throw new \Exception("Z does not match format X.XX: $Z");
    }
    list( $z, $ï¼0ï¼0x ) = [ $matches[1], $matches[2] ];
    return self::COMPLEMENTARY_CUMULATIVE[$z][$ï¼0ï¼0x];
  }
}